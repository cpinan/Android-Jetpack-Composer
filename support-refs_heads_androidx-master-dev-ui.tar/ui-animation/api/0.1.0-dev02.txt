// Signature format: 3.0
package androidx.ui.animation {

  public final class AnimatedValueEffectsKt {
    ctor public AnimatedValueEffectsKt();
    method @CheckResult(suggest="+") public static androidx.compose.Effect<androidx.animation.AnimatedValue<androidx.ui.graphics.Color>> animatedColor(androidx.ui.graphics.Color initVal);
    method @CheckResult(suggest="+") public static androidx.compose.Effect<androidx.animation.AnimatedFloat> animatedFloat(float initVal);
    method @CheckResult(suggest="+") public static <T> androidx.compose.Effect<androidx.animation.AnimatedValue<T>> animatedValue(T? initVal, kotlin.jvm.functions.Function3<? super T,? super T,? super java.lang.Float,? extends T> interpolator);
  }

  public final class ColorPropKey implements androidx.animation.PropKey<androidx.ui.graphics.Color> {
    ctor public ColorPropKey();
    method public androidx.ui.graphics.Color interpolate(androidx.ui.graphics.Color a, androidx.ui.graphics.Color b, float fraction);
  }

  public final class CrossfadeKt {
    ctor public CrossfadeKt();
    method public static <T> void Crossfade(T? current, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> children);
  }

  public final class DpPropKey implements androidx.animation.PropKey<androidx.ui.core.Dp> {
    ctor public DpPropKey();
    method public androidx.ui.core.Dp interpolate(androidx.ui.core.Dp a, androidx.ui.core.Dp b, float fraction);
  }

  public final class PxPositionPropKey implements androidx.animation.PropKey<androidx.ui.core.PxPosition> {
    ctor public PxPositionPropKey();
    method public androidx.ui.core.PxPosition interpolate(androidx.ui.core.PxPosition a, androidx.ui.core.PxPosition b, float fraction);
  }

  public final class PxPropKey implements androidx.animation.PropKey<androidx.ui.core.Px> {
    ctor public PxPropKey();
    method public androidx.ui.core.Px interpolate(androidx.ui.core.Px a, androidx.ui.core.Px b, float fraction);
  }

  public final class TransitionKt {
    ctor public TransitionKt();
    method public static <T> void Transition(androidx.animation.TransitionDefinition<T> definition, T? toState, kotlin.jvm.functions.Function1<? super androidx.animation.TransitionState,kotlin.Unit> children);
    method public static boolean getTransitionsEnabled();
    method public static void setTransitionsEnabled(boolean p);
  }

}

