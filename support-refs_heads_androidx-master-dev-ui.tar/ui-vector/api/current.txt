// Signature format: 3.0
package androidx.ui.graphics.vector {

  public final class GroupComponent extends androidx.ui.graphics.vector.VNode {
    ctor public GroupComponent(String name);
    ctor public GroupComponent();
    method public void draw(androidx.ui.graphics.Canvas canvas);
    method public androidx.ui.graphics.vector.PathNode![] getClipPathData();
    method public String getName();
    method public float getPivotX();
    method public float getPivotY();
    method public float getRotation();
    method public float getScaleX();
    method public float getScaleY();
    method public int getSize();
    method public float getTranslationX();
    method public float getTranslationY();
    method public void insertAt(int index, androidx.ui.graphics.vector.VNode instance);
    method public void move(int from, int to, int count);
    method public void remove(int index, int count);
    method public void setClipPathData(androidx.ui.graphics.vector.PathNode![] value);
    method public void setPivotX(float value);
    method public void setPivotY(float value);
    method public void setRotation(float value);
    method public void setScaleX(float value);
    method public void setScaleY(float value);
    method public void setTranslationX(float value);
    method public void setTranslationY(float value);
    property public final androidx.ui.graphics.vector.PathNode![] clipPathData;
    property public final float pivotX;
    property public final float pivotY;
    property public final float rotation;
    property public final float scaleX;
    property public final float scaleY;
    property public final int size;
    property public final float translationX;
    property public final float translationY;
  }

  public final class PathComponent extends androidx.ui.graphics.vector.VNode {
    ctor public PathComponent(String name);
    method public void draw(androidx.ui.graphics.Canvas canvas);
    method public androidx.ui.graphics.Brush? getFill();
    method public float getFillAlpha();
    method public String getName();
    method public androidx.ui.graphics.vector.PathNode![] getPathData();
    method public androidx.ui.graphics.Brush? getStroke();
    method public float getStrokeAlpha();
    method public androidx.ui.graphics.StrokeCap getStrokeLineCap();
    method public androidx.ui.graphics.StrokeJoin getStrokeLineJoin();
    method public float getStrokeLineMiter();
    method public float getStrokeLineWidth();
    method public void setFill(androidx.ui.graphics.Brush? value);
    method public void setFillAlpha(float value);
    method public void setPathData(androidx.ui.graphics.vector.PathNode![] value);
    method public void setStroke(androidx.ui.graphics.Brush? value);
    method public void setStrokeAlpha(float value);
    method public void setStrokeLineCap(androidx.ui.graphics.StrokeCap value);
    method public void setStrokeLineJoin(androidx.ui.graphics.StrokeJoin value);
    method public void setStrokeLineMiter(float value);
    method public void setStrokeLineWidth(float value);
    property public final androidx.ui.graphics.Brush? fill;
    property public final float fillAlpha;
    property public final androidx.ui.graphics.vector.PathNode![] pathData;
    property public final androidx.ui.graphics.Brush? stroke;
    property public final float strokeAlpha;
    property public final androidx.ui.graphics.StrokeCap strokeLineCap;
    property public final androidx.ui.graphics.StrokeJoin strokeLineJoin;
    property public final float strokeLineMiter;
    property public final float strokeLineWidth;
  }

  public abstract sealed class VNode {
    method public abstract void draw(androidx.ui.graphics.Canvas canvas);
  }

  public final class VectorComponent extends androidx.ui.graphics.vector.VNode {
    ctor public VectorComponent(String name, float viewportWidth, float viewportHeight, androidx.ui.core.Px defaultWidth, androidx.ui.core.Px defaultHeight);
    method public void draw(androidx.ui.graphics.Canvas canvas, androidx.ui.graphics.Color tintColor = DefaultTintColor, androidx.ui.graphics.BlendMode blendMode = DefaultTintBlendMode);
    method public void draw(androidx.ui.graphics.Canvas canvas);
    method public androidx.ui.core.Px getDefaultHeight();
    method public androidx.ui.core.Px getDefaultWidth();
    method public String getName();
    method public androidx.ui.graphics.vector.GroupComponent getRoot();
    method public int getSize();
    method public float getViewportHeight();
    method public float getViewportWidth();
    method public void setDefaultHeight(androidx.ui.core.Px p);
    method public void setDefaultWidth(androidx.ui.core.Px p);
    method public void setViewportHeight(float p);
    method public void setViewportWidth(float p);
    property public final androidx.ui.graphics.vector.GroupComponent root;
    property public final int size;
  }

  public final class VectorComposeNonIRKt {
    ctor public VectorComposeNonIRKt();
    method public static void composeVector(androidx.ui.graphics.vector.VectorComponent container, androidx.compose.CompositionReference? parent = null, kotlin.jvm.functions.Function3<? super androidx.ui.graphics.vector.VectorScope,? super java.lang.Float,? super java.lang.Float,kotlin.Unit> composable);
    method public static void disposeVector(androidx.ui.graphics.vector.VectorComponent container, androidx.compose.CompositionReference? parent = null);
  }

  public final class VectorComposer extends androidx.compose.Composer<androidx.ui.graphics.vector.VNode> {
    ctor public VectorComposer(androidx.ui.graphics.vector.VNode root, androidx.compose.Recomposer recomposer);
    method public androidx.ui.graphics.vector.VNode getRoot();
  }

  public final class VectorComposition {
    ctor public VectorComposition(androidx.ui.graphics.vector.VectorComposer composer);
    method public inline void call(Object key, kotlin.jvm.functions.Function1<? super androidx.compose.ViewValidator,java.lang.Boolean> invalid, kotlin.jvm.functions.Function0<kotlin.Unit> block);
    method public inline <T> void call(Object key, kotlin.jvm.functions.Function0<? extends T> ctor, kotlin.jvm.functions.Function2<? super androidx.compose.ViewValidator,? super T,java.lang.Boolean> invalid, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> block);
    method public inline <T extends androidx.ui.graphics.vector.VNode> void emit(Object key, kotlin.jvm.functions.Function0<? extends T> ctor, kotlin.jvm.functions.Function1<? super androidx.compose.ComposerUpdater<androidx.ui.graphics.vector.VNode,androidx.ui.graphics.vector.VNode>,kotlin.Unit> update);
    method public inline void emit(Object key, kotlin.jvm.functions.Function0<androidx.ui.graphics.vector.GroupComponent> ctor, kotlin.jvm.functions.Function1<? super androidx.compose.ComposerUpdater<androidx.ui.graphics.vector.VNode,androidx.ui.graphics.vector.GroupComponent>,kotlin.Unit> update, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.graphics.vector.VectorComposer getComposer();
    method public inline Object joinKey(Object left, Object? right);
    method public inline operator <V> V! unaryPlus(androidx.compose.Effect<V>);
  }

  public final class VectorKt {
    ctor public VectorKt();
    method public static inline androidx.ui.graphics.vector.PathNode![] PathData(kotlin.jvm.functions.Function1<? super androidx.ui.graphics.vector.PathBuilder,kotlin.Unit> block);
    method public static androidx.ui.graphics.vector.PathNode![] addPathNodes(String? pathStr);
    method public static androidx.ui.graphics.StrokeCap getDefaultStrokeLineCap();
    method public static androidx.ui.graphics.StrokeJoin getDefaultStrokeLineJoin();
    method public static androidx.ui.graphics.BlendMode getDefaultTintBlendMode();
    method public static androidx.ui.graphics.Color getDefaultTintColor();
    method public static androidx.ui.graphics.vector.PathNode![] getEmptyPath();
    field public static final float DefaultAlpha = 1.0f;
    field public static final String DefaultGroupName = "";
    field public static final String DefaultPathName = "";
    field public static final float DefaultPivotX = 0.0f;
    field public static final float DefaultPivotY = 0.0f;
    field public static final float DefaultRotation = 0.0f;
    field public static final float DefaultScaleX = 1.0f;
    field public static final float DefaultScaleY = 1.0f;
    field public static final float DefaultStrokeLineMiter = 4.0f;
    field public static final float DefaultStrokeLineWidth = 0.0f;
    field public static final float DefaultTranslationX = 0.0f;
    field public static final float DefaultTranslationY = 0.0f;
  }

  public final class VectorScope {
    ctor public VectorScope(androidx.ui.graphics.vector.VectorComposition composer);
    method public androidx.ui.graphics.vector.VectorComposition getComposer();
  }

}

